# queries run once per cluster (via the 'postgres' database)

- name: "pg_stat_activity"
  help: "running backends by database, user, and state"
  scope: cluster
  min_version: 9.2
  max_version: 9.5
  labels:
    - "datname"
    - "usename"
    - "state"
    - "wait_event_type"
    - "wait_event"
  values:
    - "count"
    - "max_tx_duration"
  query: >-
          SELECT datname::text, usename::text,
          CASE WHEN waiting THEN 'waiting'::text ELSE state END AS state,
          ''::text AS wait_event_type, ''::text AS wait_event,
          COUNT(*)::float AS count,
          COALESCE(MAX(EXTRACT(EPOCH FROM clock_timestamp() - xact_start))::float, 0) AS max_tx_duration
          FROM pg_stat_activity
          WHERE NOT datname ~ '^template(0|1)$'
          GROUP BY 1, 2, 3, 4, 5

- name: "pg_stat_activity"
  help: "running backends by database, user, and state"
  scope: cluster
  min_version: 9.6
  labels:
    - "datname"
    - "usename"
    - "state"
    - "wait_event_type"
    - "wait_event"
  values:
    - "count"
    - "max_tx_duration"
  query: >-
          SELECT datname::text, usename::text,
          CASE WHEN state = 'active' AND wait_event_type IS NOT NULL THEN 'waiting'::text ELSE state END AS state,
          COALESCE(wait_event_type::text, '') AS wait_event_type,
          COALESCE(wait_event::text, '') AS wait_event,
          COUNT(*)::float AS count,
          COALESCE(MAX(EXTRACT(EPOCH FROM clock_timestamp() - xact_start))::float, 0) AS max_tx_duration
          FROM pg_stat_activity
          WHERE NOT datname ~ '^template(0|1)$'
          GROUP BY 1, 2, 3, 4, 5
