image: "credativ/debian-build:stretch"

variables:
  DEPLOY_SSH_USER: "ansible"
  DEPLOY_SSH_PORT: "22"

stages:
  - build
  - publish
  # - test
  - deploy
  - release

### build ###

build:docs:
  stage: build
  image: "tianon/latex"
  script:
    - apt-get update -qq
    - apt-get install -y --no-install-recommends make sphinx-common python3-sphinx python3-recommonmark python3-sphinx-rtd-theme
    - make docs
  artifacts:
    paths:
      - doc/_build/html

build:stretch:
  stage: build
  script:
    - apt-get update -qq
    - apt-get -y --no-install-recommends build-dep ./
    - apt-get -y --no-install-recommends install devscripts git
    - ci/rebuild.sh deb9
    - make deb
    - mkdir -p debs
    - mv ../*.* debs
  artifacts:
    expire_in: 2 weeks
    paths:
      - debs/*
      - lintian.log

build:bionic:
  # 2018-04-25: bionic image hanging on configuring tzdata, use stretch for now
  #image: "ubuntu:bionic"
  stage: build
  script:
    - apt-get update -qq
    - apt-get -y --no-install-recommends build-dep ./
    - apt-get -y --no-install-recommends install devscripts git
    - ci/rebuild.sh ubuntu18.04
    - make deb
    - mkdir -p debs
    - mv ../*.* debs
  artifacts:
    expire_in: 2 weeks
    paths:
      - debs/*
      - lintian.log

build:centos7:
  image: "centos:centos7"
  stage: build
  script:
    - yum install -y rpm-build yum-utils git make
    - yum-builddep -y rpm/elephant-shed.spec
    - make rpmbuild PACKAGE_RELEASE=1~$(git log --oneline | wc -l)
  artifacts:
    expire_in: 2 weeks
    paths:
      - rpm/RPMS/*/*
      - rpm/SRPMS/*

build:centos7-release:
  image: "centos:centos7"
  stage: build
  script:
    - yum install -y rpm-build yum-utils git make
    - yum-builddep -y rpm/elephant-shed.spec
    - make rpmbuild
  artifacts:
    expire_in: 2 weeks
    paths:
      - rpm/RPMS/*/*
      - rpm/SRPMS/*

### publish ###

publish:stretch:
  stage: publish
  dependencies:
    - build:stretch
  script:
    - apt-get install -y --no-install-recommends curl make
    - aptly/upload_packages.sh stretch-test debs
    - aptly/include_packages.sh stretch-test
    - aptly/publish_packages.sh stretch-test
  only:
    - master

publish:bionic:
  stage: publish
  dependencies:
    - build:bionic
  script:
    - apt-get install -y --no-install-recommends curl make
    - aptly/upload_packages.sh bionic-test debs
    - aptly/include_packages.sh bionic-test
    - aptly/publish_packages.sh bionic-test
  only:
    - master

publish:centos7:
  tags:
    - aptly
  stage: publish
  dependencies:
    - build:centos7
  script:
    - rpm --addsign rpm/RPMS/noarch/*.rpm rpm/SRPMS/*.rpm
    - cp rpm/RPMS/noarch/*.rpm /home/debian/postgresql/yum/el7-test/noarch
    - cp rpm/SRPMS/*.rpm /home/debian/postgresql/yum/el7-test/src
    - cd /home/debian; make yum-test
  only:
    - master

publish:centos7-release: &publish_centos7
  <<: *publish_centos7
  dependencies:
    - build:centos7-release
  script:
    - rpm --addsign rpm/RPMS/noarch/*.rpm rpm/SRPMS/*.rpm
    - cp rpm/RPMS/noarch/*.rpm /home/debian/postgresql/yum/el7/noarch
    - cp rpm/SRPMS/*.rpm /home/debian/postgresql/yum/el7/src
    - cd /home/debian; make yum-release
  when: manual

### deploy ###

deploy:x86:
  stage: deploy
  dependencies:
    - publish:stretch
  script:
    - sudo apt-get install -y ansible
    - cd vagrant
    - echo "$DEPLOY_X86_SSH_KEY" > id_file
    - chmod 0600 id_file
    - echo "[test]" > inventory
    - echo "$DEPLOY_X86_NAME ansible_ssh_host=${DEPLOY_X86_IP} ansible_ssh_port=${DEPLOY_SSH_PORT} ansible_ssh_user=${DEPLOY_SSH_USER} ansible_ssh_private_key_file=id_file" >> inventory
    # We can't provide this envirionment variable throught "variables" for some reason.
    - export ANSIBLE_HOST_KEY_CHECKING=False
    - ansible-playbook -i inventory elephant-shed.yml
  only:
    - master
  environment:
    name: elephant-shed
    url: https://elephant-shed.dev.credativ.lan

deploy:ppc64el:
  stage: deploy
  dependencies:
    - publish:stretch
  script:
    - sudo apt-get install -y ansible
    - cd vagrant
    - echo "$DEPLOY_PPC64EL_SSH_KEY" > id_file
    - chmod 0600 id_file
    - echo "[test]" > inventory
    - echo "$DEPLOY_PPC64EL_NAME ansible_ssh_host=${DEPLOY_PPC64EL_IP} ansible_ssh_port=${DEPLOY_SSH_PORT} ansible_ssh_user=${DEPLOY_SSH_USER} ansible_ssh_private_key_file=id_file" >> inventory
    # We can't provide this envirionment variable throught "variables" for some reason.
    - export ANSIBLE_HOST_KEY_CHECKING=False
    - ansible-playbook -i inventory elephant-shed.yml
  only:
    - master
  environment:
    name: elephant-shed-ppc64el
    url: https://elephant-shed-ppc64el.dev.credativ.lan

deploy:bionic-x86:
  stage: deploy
  dependencies:
    - publish:bionic
  script:
    - sudo apt-get install -y ansible
    - cd vagrant
    - echo "$DEPLOY_X86_SSH_KEY" > id_file
    - chmod 0600 id_file
    - echo "[test]" > inventory
    - echo "$DEPLOY_X86_BIONIC_NAME ansible_ssh_host=${DEPLOY_X86_BIONIC_IP} ansible_ssh_port=${DEPLOY_SSH_PORT} ansible_ssh_user=${DEPLOY_SSH_USER} ansible_ssh_private_key_file=id_file" >> inventory
    # We can't provide this envirionment variable throught "variables" for some reason.
    - export ANSIBLE_HOST_KEY_CHECKING=False
    - ansible-playbook -i inventory elephant-shed.yml
  only:
    - master
  environment:
    name: elephant-shed-bionic
    url: https://elephant-shed-bionic.dev.credativ.lan

deploy:centos7-x86:
  tags:
    - centos7-x86
  stage: deploy
  dependencies:
    - build:centos7
  script:
    - 'test -f /etc/yum.repos.d/credativ-test.repo || sudo yum install https://packages.credativ.com/public/postgresql/yum/credativ-test-repo.noarch.rpm'
    - sudo yum update -y
    - sudo yum install -y elephant-shed
  only:
    - master
  environment:
    name: elephant-shed-centos7
    url: https://elephant-shed-centos7.dev.credativ.lan

### Build release packages ###
# These jobs should not be triggered automatically.

build:stretch-release:
  stage: build
  script:
    - apt-get -y --no-install-recommends build-dep ./
    - apt-get -y --no-install-recommends install devscripts git
    - ci/rebuild.sh deb9 release
    - make deb
    - mkdir -p debs
    - mv ../*.* debs
  artifacts:
    paths:
      - debs/*
      - lintian.log
  only:
    - master
  when: manual

build:bionic-release:
  stage: build
  script:
    - apt-get -y --no-install-recommends build-dep ./
    - apt-get -y --no-install-recommends install devscripts git
    - ci/rebuild.sh ubuntu18.04 release
    - make deb
    - mkdir -p debs
    - mv ../*.* debs
  artifacts:
    paths:
      - debs/*
      - lintian.log
  only:
    - master
  when: manual

### publish release packages ###

publish:stretch-release:
  stage: publish
  dependencies:
    - build:stretch-release
  script:
    - apt-get install -y --no-install-recommends curl make
    - aptly/upload_packages.sh stretch-test debs
    - aptly/include_packages.sh stretch-test
    - aptly/publish_packages.sh stretch-test
  only:
    - master
  when: manual

publish:bionic-release:
  stage: publish
  dependencies:
    - build:bionic-release
  script:
    - apt-get install -y --no-install-recommends curl make
    - aptly/upload_packages.sh bionic-test debs
    - aptly/include_packages.sh bionic-test
    - aptly/publish_packages.sh bionic-test
  only:
    - master
  when: manual
